<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="board">

	<resultMap id="findBoardVo" type="boardvo">
	   <id property="no" column="no" />
	   <result property="title" column="title" />
	   <result property="hit" column="hit" />
	   <result property="regDate" column="regDate" />
	   <result property="depth" column="depth" />
	   <result property="status" column="status" />
	   <result property="userVo.name" column="userName" />
	   <result property="userVo.no" column="userNo" />
	</resultMap>
	<select id="findPage" parameterType="map" resultMap="findBoardVo">
		<choose>
			<when test='_parameter == null or _parameter == ""'>
				<![CDATA[
					select b.no as no, b.title as title, u.name as userName, b.hit as hit, date_format(b.reg_date, '%Y-%m-%d %h:%i:%s') as regDate, b.depth as depth, u.no as userNo, b.status as status
					from board b join user u on b.user_no = u.no 
					order by b.g_no desc, b.o_no asc limit #{page},#{row}
				]]>	
			</when>
			<otherwise>
				<![CDATA[
					select b.no as no, b.title as title, u.name as userName, b.hit as hit, date_format(b.reg_date, '%Y-%m-%d %h:%i:%s') as regDate, b.depth as depth, u.no as userNo, b.status as status
					from board b join user u on b.user_no = u.no 
					where title like #{keyword} or contents like #{keyword} 
					order by b.g_no desc, b.o_no asc limit #{page},#{row}
				]]>	
			</otherwise>
		</choose>
	</select>

	<select id="findAll" resultMap="findBoardVo">
		<![CDATA[
			select b.no as no, b.title as title, u.name as userName, b.hit as hit, date_format(b.reg_date, '%Y-%m-%d %h:%i:%s') as regDate, b.depth as depth, u.no as userNo
			from board b join user u on b.user_no = u.no order by b.g_no desc, b.o_no asc
		]]>
	</select>

	<select id="getTotalCount" parameterType="string" resultType="integer">
		<choose>
			<when test='_parameter == null or _parameter == ""'>
				<![CDATA[
					select count(*)
					from board
				]]>	
			</when>
			<otherwise>
				<![CDATA[
					select count(*)
					from board
					where title like '%${_parameter }%'
					or contents like '%${_parameter }%'
				]]>	
			</otherwise>
		</choose>
	</select>
	
	<insert id="addContents" parameterType="boardvo">
		<![CDATA[
			insert 
			into board 
			values(null, #{title }, #{contents }, 0, now(), 
			(SELECT IFNULL(MAX(g_no) + 1, 1) FROM board b), 
			1, 0, #{userVo.no }, 'new')
		]]>
	</insert>
	
	<update id="replyUpdate" parameterType="boardvo">
		<![CDATA[
			update board set o_no = o_no+1 where g_no = #{gNo } and o_no >= #{oNo }
		]]>
	</update>
	
	<insert id="replyContents" parameterType="boardvo">
		<![CDATA[
			insert into board values(null, #{title }, #{contents }, 0, now(), #{gNo }, #{oNo }, #{depth }, #{userVo.no }, 'new')
		]]>
	</insert>
	
	<select id="findByBoardNo" resultMap="findBoardVo" parameterType="long">
		<![CDATA[
			select no, title, contents, hit, date_format(reg_date, '%Y-%m-%d') as regDate, g_no, o_no, depth, user_no as userNo
			from board where no = #{no }
		]]>
	</select>

	<select id="findByBoardNoAndUserNo" resultMap="findBoardVo" parameterType="map">
		<![CDATA[
			select no, title, contents, hit, date_format(reg_date, '%Y-%m-%d') as regDate, g_no, o_no, depth, user_no as userNo
			from board where no = #{no } and user_no = #{userno }
		]]>
	</select>
	
	<update id="deleteByNo" parameterType="map">
		<![CDATA[
			update board set status = 'deleted' where no = #{no } and user_no = #{userno }
		]]>
	</update>
	
	<update id="updateByNo" parameterType="boardvo">
		<![CDATA[
			update board set title = #{title }, contents = #{contents }, status = 'modify' where no = #{no }
		]]>
	</update>
	
	<update id="updateHit" parameterType="long">
		<![CDATA[
			update board set hit = hit+1 where no = #{no }
		]]>
	</update>
	
</mapper>